<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.netbrasoft.gnuob</groupId>
	<artifactId>gnuob-soap</artifactId>
	<version>0.0.2-SNAPSHOT</version>
	<packaging>war</packaging>
	<name>GNU Open Business Platform</name>
	<description>GNU Open Business Platform is a open source business framework</description>

	<url>https://github.com/bendraaisma/gnuob-soap</url>
	<licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<distribution>repo</distribution>
			<url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
		</license>
	</licenses>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<version.war.plugin>2.1.1</version.war.plugin>
		<version.jboss.maven.plugin>7.4.Final</version.jboss.maven.plugin>
		<version.springframework.plugin>4.1.0.RELEASE</version.springframework.plugin>
		<version.surefire.plugin>2.10</version.surefire.plugin>
		<version.org.apache.cxf>3.0.5</version.org.apache.cxf>
		<version.javasimon>4.0.1</version.javasimon>
		<version.PBKDF2>1.1.0</version.PBKDF2>
		<version.picketbox>4.9.2.Final</version.picketbox>

		<maven.compiler.target>1.8</maven.compiler.target>
		<maven.compiler.source>1.8</maven.compiler.source>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.wildfly.bom</groupId>
				<artifactId>jboss-javaee-7.0-wildfly-with-tools</artifactId>
				<version>9.0.0.CR2</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>

		<!-- JBOSS Etc. -->

		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-frontend-jaxws</artifactId>
			<version>${version.org.apache.cxf}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-tools-wsdlto-databinding-jaxb</artifactId>
			<version>${version.org.apache.cxf}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.spec.javax.ejb</groupId>
			<artifactId>jboss-ejb-api_3.2_spec</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.spec.javax.interceptor</groupId>
			<artifactId>jboss-interceptors-api_1.2_spec</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- UTILS -->

		<dependency>
			<groupId>com.paypal</groupId>
			<artifactId>paypal-service</artifactId>
			<version>119.0</version>
			<scope>system</scope>
			<systemPath>${project.basedir}/src/main/webapp/WEB-INF/lib/paypal-service-121.0.jar</systemPath>
		</dependency>
		<dependency>
			<groupId>pagseguro-api</groupId>
			<artifactId>pagseguro-api</artifactId>
			<version>2.3.0</version>
			<scope>system</scope>
			<systemPath>${project.basedir}/src/main/webapp/WEB-INF/lib/pagseguro-api-2.5.2.jar</systemPath>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-search-orm</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-ehcache</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.picketbox</groupId>
			<artifactId>picketbox</artifactId>
			<version>${version.picketbox}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>de.rtner</groupId>
			<artifactId>PBKDF2</artifactId>
			<version>${version.PBKDF2}</version>
		</dependency>

		<!-- SIMON -->

		<dependency>
			<groupId>org.javasimon</groupId>
			<artifactId>javasimon-core</artifactId>
			<version>${version.javasimon}</version>
		</dependency>
		<dependency>
			<groupId>org.javasimon</groupId>
			<artifactId>javasimon-jdbc41</artifactId>
			<version>${version.javasimon}</version>
		</dependency>
		<dependency>
			<groupId>org.javasimon</groupId>
			<artifactId>javasimon-javaee</artifactId>
			<version>${version.javasimon}</version>
		</dependency>
		<dependency>
			<groupId>org.javasimon</groupId>
			<artifactId>javasimon-console-embed</artifactId>
			<version>${version.javasimon}</version>
		</dependency>
	</dependencies>

	<build>
		<!-- Maven will append the version to the finalName (which is the name given to the generated war, and hence the context root) -->
		<finalName>${project.artifactId}</finalName>
		<plugins>
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>${version.war.plugin}</version>
				<configuration>
					<!-- Java EE 6 doesn't require web.xml, Maven needs to catch up! -->
					<failOnMissingWebXml>false</failOnMissingWebXml>
					<archive>
						<manifestEntries>
							<mode>development</mode>
							<url>${project.url}</url>
							<dependencies>org.apache.cxf services,org.apache.cxf.impl</dependencies>
						</manifestEntries>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
						</manifest>
					</archive>
				</configuration>
			</plugin>
			<!-- The JBoss AS plugin deploys your war to a local JBoss EAP container -->
			<!-- To use, run: mvn package jboss-as:deploy -->
			<plugin>
				<groupId>org.jboss.as.plugins</groupId>
				<artifactId>jboss-as-maven-plugin</artifactId>
				<version>${version.jboss.maven.plugin}</version>
			</plugin>
			<!-- Plugin to execute liquibase changelog scripts on MySQL database. -->
			<plugin>
				<groupId>org.liquibase</groupId>
				<artifactId>liquibase-maven-plugin</artifactId>
				<version>3.3.2</version>
				<configuration>
					<driver>com.mysql.jdbc.Driver</driver>
					<url>${liquibase.url}</url>
					<username>${liquibase.username}</username>
					<password>${liquibase.password}</password>
					<promptOnNonLocalDatabase>false</promptOnNonLocalDatabase>
					<propertyFile>/src/main/resources/liquibase/liquibase.properties</propertyFile>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>mysql</groupId>
						<artifactId>mysql-connector-java</artifactId>
						<version>5.1.29</version>
					</dependency>
				</dependencies>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<!-- The default profile skips all tests, though you can tune it to run just unit tests based on a custom pattern -->
			<!-- Seperate profiles are provided for running all tests, including Arquillian tests that execute in the specified container -->
			<id>default</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>${version.surefire.plugin}</version>
						<configuration>
							<skip>true</skip>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>sonar</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<sonar.jdbc.url>
					jdbc:mysql://localhost:3306/sonar?useUnicode=true&amp;characterEncoding=utf8
				</sonar.jdbc.url>
				<sonar.jdbc.username>sonar</sonar.jdbc.username>
				<sonar.jdbc.password>sonar</sonar.jdbc.password>

				<!-- Optional URL to server. Default value is http://localhost:9000 -->
				<sonar.host.url>
					http://localhost:9000
				</sonar.host.url>
			</properties>
		</profile>
	</profiles>

	<organization>
		<name>Netbrasoft</name>
		<url>www.netbrasoft.com</url>
	</organization>
</project>
